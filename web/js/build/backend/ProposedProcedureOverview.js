define(["require","exports","./ResponsibilitySetter"],(function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ProposedProcedureOverview=void 0;e.ProposedProcedureOverview=class{constructor(t){this.$widget=t,this.plannedInterval=null,this.csrf=this.$widget.find("input[name=_csrf]").val(),this.$widget.on("change","input[name=visible]",this.onVisibleChanged.bind(this)),this.initComments(),this.initUpdateWidget(),this.onContentUpdated(),new i.ResponsibilitySetter($(".proposedProcedureReloadHolder")),this.$widget.on("click",".contactShow",(t=>{t.preventDefault(),$(t.currentTarget).next(".contactDetails").removeClass("hidden")}))}onContentUpdated(){this.$widget.find(".commentList").each(((t,e)=>{e.scrollTop=e.scrollHeight}))}onVisibleChanged(t){let e=$(t.currentTarget),i={_csrf:this.csrf,visible:e.prop("checked")?1:0,id:e.parents(".item").first().data("id")};$.post(e.data("save-url"),i,(t=>{t.success||t.error&&alert(t.error)}))}initComments(){this.$widget.on("click",".writingOpener",this.openWriting.bind(this)),this.$widget.on("click",".submitComment",(t=>{t.preventDefault();let e=$(t.currentTarget);this.submitComment(e.parents("td").first())})),this.$widget.on("click",".cancelWriting",(t=>{t.preventDefault(),$(t.currentTarget).parents("td").first().removeClass("writing")})),this.$widget.on("keypress","textarea",(t=>{if(t.originalEvent.metaKey&&13===t.originalEvent.keyCode){let e=$(t.currentTarget);this.submitComment(e.parents("td").first())}}))}openWriting(t){t.preventDefault();let e=$(t.currentTarget).parents("td").first();e.addClass("writing"),e.find("textarea").focus()}submitComment(t){let e={_csrf:this.csrf,comment:t.find("textarea").val(),id:t.parents(".item").data("id")};$.post(t.data("post-url"),e,(e=>{if(!e.success)return void(e.error&&alert(e.error));let i=t.find(".template").clone();i.find(".date").text(e.date_str),i.find(".name").text(e.user_str),i.find(".comment").html(e.text),i.removeClass("template"),i.insertBefore(t.find(".template")),window.setTimeout((()=>{t.find(".commentList")[0].scrollTop=t.find(".commentList")[0].scrollHeight}),1),t.find("textarea").val(""),t.removeClass("writing")}))}skipReload(){return this.$widget.find(".respHolder.dropdown.open").length>0||this.$widget.find(".comments.writing").length>0}reload(t){if(this.skipReload())return console.log("No reload, as comment writing is active"),void t();$.ajax({type:"GET",url:this.updateUrl,success:e=>{e.success?(this.$dateField.text(e.date),this.$proposalList.html(e.html),this.onContentUpdated(),t()):e.error&&alert(e.error)},error:()=>{t()}})}executeInterval(){this.reload((()=>{this.plannedInterval=window.setTimeout(this.executeInterval.bind(this),5e3)}))}startInterval(){null===this.plannedInterval&&(this.plannedInterval=window.setTimeout(this.executeInterval.bind(this),5e3))}stopInterval(){null!==this.plannedInterval&&(window.clearTimeout(this.plannedInterval),this.plannedInterval=null)}initUpdateWidget(){this.$updateWidget=this.$widget.find(".autoUpdateWidget"),this.$proposalList=this.$widget.find(".reloadContent"),this.$dateField=this.$widget.find(".currentDate .date"),this.updateUrl=this.$widget.data("reload-url");let t=this.$updateWidget.find("#autoUpdateToggle");t.on("change",(()=>{t.prop("checked")?(this.reload((()=>{})),this.startInterval()):this.stopInterval()})).trigger("change")}}}));
//# sourceMappingURL=ProposedProcedureOverview.js.map
